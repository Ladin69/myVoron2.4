#####################################################################
#   Macros
#####################################################################
[gcode_macro G32]
gcode:
    # Uložíme aktuální stav tiskárny (pozici trysky, stav extruderu a další hodnoty)
    SAVE_GCODE_STATE NAME=STATE_G32
    # Přepneme na absolutní pozicování/vzdálenosti
    G90
    # zde je podmínka - pokud není tiskárna "vyhoumovaná" provede se příkaz home - G28
    {% if printer.toolhead.homed_axes != "xyz" %}
    G28
    {% endif %}
    # Tento řádek spustí levlování Gantry pro Voron 2.4
    QUAD_GANTRY_LEVEL
    # Následuje opět home, ale nyní jen pro osu Z
    G28 Z
    # Obnovíme hodnoty původního stavu tiskárny
    RESTORE_GCODE_STATE NAME=STATE_G32
    M300
    
#[gcode_macro G32]
#gcode:
#    BED_MESH_CLEAR
#    G28
#    QUAD_GANTRY_LEVEL
#    CLEAN_NOZZLE
#    G28
#    BED_MESH_PROFILE LOAD="default"
#    CALIBRATE_Z

[gcode_macro PRINT_START]
description: Use PRINT_START for the slicer starting script
# CALIBRATE_Z は RESTORE_GCODE_STATE すると失われるので注意
# PrusaSlicer で以下のように gcode startup を設定
# print_start EXTRUDER=[first_layer_temperature[initial_tool]] BED=[first_layer_bed_temperature]
gcode:
    NEOPIXEL_DISPLAY LED="my_led" TYPE=extruder_temp MODE=glow
    
    {% set TOOLS_USED = params.TOOLS_USED|default("")|string %}
    {% set INITIAL_TOOL = params.INITIAL_TOOL|default(0)|int %}

    {% if TOOLS_USED == "!referenced_tools!" %}
        RESPOND MSG="Happy Hare gcode pre-processor is diabled"
        {% set TOOLS_USED = INITIAL_TOOL %}
    {% elif TOOLS_USED == "" %}
        RESPOND MSG="Happy Hare single color print"
        {% set TOOLS_USED = INITIAL_TOOL %}
    {% endif %}
    
    MMU_CHECK_GATE TOOLS={TOOLS_USED}

    STATUS_START
    M117 Apply QGL
    G32
    G90    
    {% set extruder_temp = params.EXTRUDER|default(190)|int %}
    {% set bed_temp = params.BED|default(100)|int %}    
    SETUP_KAMP_MESHING DISPLAY_PARAMETERS=1 LED_ENABLE=1 FUZZ_ENABLE=1
#    SET_GCODE_OFFSET Z=0.0
    SET_GCODE_VARIABLE MACRO=Z_ADJUST VARIABLE=total VALUE=0
    M300
    
    CLEAN_NOZZLE
    M300
    
    M117 Apply QGL
    M109 S190
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    M300

    M117 Bed mesh
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    M300
#    M117 MESH LOAD
#    BED_MESH_PROFILE LOAD="default"
#    M300
#    M300
    M117 CLEAN NOZZLE
    M106 S0 ; Cooling Fan Off
    CLEAN_NOZZLE
    M300
    BED_MESH_PROFILE LOAD="default"
    M117 Heating...
    STATUS_HEATING
    ; heat both for chamber temperature
    M106 S255 ; Cooling Fan On
    M190 S{bed_temp}      ; wait
    M109 S{extruder_temp} ; wait
    G92 E0                         ; zero the extruder
 #       G1 E-1.0 F1800                 ; retract filament
    CLEAN_NOZZLE
    M300

    M117 Purge Extruder
    STATUS_PRINT
     # Nyní čekáme na nahřátí trysky na hodnotu předanou slicerem
    M109 S{extruder_temp} 
    # G1 je gcode pro pohyb. Nyní přesuneme trysku do levého spodního rohu 5mm nad podložku G1 X3 Y6 Z5 F5000
    G1 X30 Y30 Z5 F5000
    # Nyní sjedeme tryskou 0,3mm nad podložku
    G1 Z0.3 F3000       
    # Resetování vzdálenosti extruderu
    G92 E0    
#    #SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1
    # Očištění trysky. Následující gcode nám pomalu posunuje trysku 14cm doprava a extruder vytlačí 30mm filamentu
    # První pohyb je pomalejší a delší (až do 12cm), a následuje rychlé očištění 2 cm na výsledných 14 cm
    G1 X120 E30 F600
    G1 X140 F5000
    G92 E0
    # Následně před samotným tiskem proběhne krátká retrakce a resetování vzdálenosti extruderu
    G1 E-0.2 F600
    G92 E0
    M300
    M300
#    SET_GCODE_OFFSET Z_ADJUST=-0.10 MOVE=1
    NEOPIXEL_DISPLAY LED="my_led" TYPE=print_percent MODE=progress

  

[gcode_macro PRINT_END]
gcode:
    # Uložíme aktuální stav tiskárny (pozici trysky, stav extruderu a další hodnoty)
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    # Vypneme nahřívání hotendu a bedu
    TURN_OFF_HEATERS
    # Přepneme na relativní vzdálenosti, a zvedneme trysku o 10mm nahoru
    # POZOR - pokud tisknete vysoké tisky na maximální výšku tiskárny, tento gcode vám může dělat potíže
    # Následně přepneme zpět na absolutní pozicování/vzdálenosti pomocí G90
    G91
    G1 Z10 F3000
    G90
    # Přesuneme toolhead doprava a dopředu
    # Zde záleží, kam chcete umístit toolhead/tiskovou hlavu po skončení tisku. Není dobré ji nechat viset na tiskem
    # nastavte podle vaší tiskárny a podle toho kde chcete tiskouvou hlavu mít.
    # v tomto případě jde tisková hlava dopředu (Y20) a doprava (X300)
    G1 Y20
    G1 X300
    
    # Počkáme na vyčištění bufferu
    M400
    # Vynulujeme vzdálenosti extruderu
    G92 E0
    # Zatáhneme filament 20mm dovnitř hotendu
    # tento řádek nám pak umožní vytáhnout filament z tiskárny i za studena a je kompenzován 
    # v PRINT_START (proto tlačíme 30mm filamentu před tiskem)
    G1 E-20.0 F3000
    # Vypneme ventilátor
    M106 S0
     # Vypneme motory
    M84
    # Vymažeme naměřený bed mesh
    BED_MESH_CLEAR    
    # Airwolf Sound
    M300 S932 P428                           
    M300 S0 P214
    M300 S1244 P214
    M300 S1396 P214
    M300 S1661 P214
    M300 S932 P214
    M300 S0 P428
    M300 S2217 P214
    M300 S2093 P214
    M300 S1661 P214
    M300 S932 P428
    M300 S0 P428
    M300 S2217 P214
    M300 S2093 P214
    M300 S1661 P214
    M300 S932 P428
    M300 S0 P214
    M300 S1661 P214
    M300 S2093 P214
    M300 S1396 P428
    M300 S1244 P428
    M300 S1108 P214
    M300 S1244 P214
    M300 S1046 P214
    M300 S1661 P214
    M300 S932 P21
    STATUS_RAINBOW
    G28 Y0
    #XYCG28
    M117 Finished!          ; move nozzle up
# Obnovíme hodnoty původního stavu tiskárny
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    STATUS_RAINBOW
    #STATUS_OFF
    TIME_OUT
    STOP_LEDS

[gcode_macro Z_ADJUST]
description: SET_GCODE_OFFSET Z_ADJUST and show total adjusted value from CALIBRATE_Z on PRINT_START 
variable_total: 0
gcode:
    {% set adj = params.VALUE|default(0)|float %}
    {% set total = total + adj %}
    SET_GCODE_VARIABLE MACRO=Z_ADJUST VARIABLE=total VALUE={total}
    SET_GCODE_OFFSET Z_ADJUST={adj} MOVE=1
    _Z_ADJUST_PRINT 

[gcode_macro _Z_ADJUST_PRINT]
gcode:
    {% set total = printer["gcode_macro Z_ADJUST"].total %}
    { action_respond_info("Total Adjusted: %.3f, New Origin: %.5f" % (total, printer.gcode_move.homing_origin.z)) }



[gcode_macro KALIBRACE_Z]
#rename_existing: BASE_CALIBRATE_Z
gcode:
    M117 Z-Calibration..
    STATUS_CALIBRATING_Z
    SET_GCODE_OFFSET Z=0
    BASE_CALIBRATE_Z
    M117
    STATUS_READY

[gcode_macro Presnost_sondy]
gcode:
    STATUS_CALIBRATING_Z
    M117 Probe accuracy
    PROBE_ACCURACY
    M117
    STATUS_READY

[gcode_macro Ofset_CALIBRATE]
gcode:
    PROBE_CALIBRATE
    #Z_ENDSTOP_CALIBRATE

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro BEEP]
gcode:
    # Parameters
    {% set i = params.I|default(1)|int %}           ; Iterations (number of times to beep).
    {% set dur = params.DUR|default(100)|int %}     ; Duration/wait of each beep in ms. Default 100ms.
    {% set freq = params.FREQ|default(2000)|int %}  ; Frequency in Hz. Default 2kHz.

    {% for iteration in range(i|int) %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={ 1.0/freq if freq > 0 else 1 }
    G4 P{dur}
    SET_PIN PIN=beeper VALUE=0
    G4 P{dur}
    {% endfor %}

[gcode_macro BEEP_MORSE]
gcode:
    {% set freq = params.FREQ|default(1000)|int %}     ; Frequency in Hz.
    {% set wpm = params.WPM|default(12)|int %}         ; Speed in WPM (typicaly 12-15wpm)
    {% set code = params.CODE|default("...---...")|string %} ; Morse code
    {% set unit = 1200.0 / wpm %} ; DOT unit in ms
    {% set cycle = 1.0 / freq %}

    {% for c in code %}
    {% if c == " " %}
    G4 P{unit * 3}
    {% elif c == "." %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={cycle}
    G4 P{unit}
    SET_PIN PIN=beeper VALUE=0
    G4 P{unit}
    {% elif c == "-" %}
    SET_PIN PIN=beeper VALUE=0.8 CYCLE_TIME={cycle}
    G4 P{unit * 3}
    SET_PIN PIN=beeper VALUE=0
    G4 P{unit}
    {% endif %}
    {% endfor %}

[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(1000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=beeper VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0



[gcode_macro CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}
    
[gcode_macro XYCG28]
gcode:
    {% if "xy" not in printer.toolhead.homed_axes %}
        G28 X Y
    {% endif %}

[gcode_macro ZCG28]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
        G28 Z
    {% endif %}

[gcode_macro ZERO_GCODE_OFFSET]
gcode:
    SET_GCODE_OFFSET Z=0.0

[gcode_macro TEMPADJUSTOFFSET]
gcode:
    #ABS
    {% if printer.heater_bed.target >= 100 %}
    {% endif %}
    #PETG
    {% if printer.heater_bed.target > 65 and printer.heater_bed.target < 100 %}
        SET_GCODE_OFFSET Z=0 MOVE=1
        SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1
    {% endif %}
    #PLA
    {% if printer.heater_bed.target <= 65 %}
        SET_GCODE_OFFSET Z=0 MOVE=1
        SET_GCODE_OFFSET Z_ADJUST=0.03 MOVE=1
    {% endif %}

# Park center of build volume
[gcode_macro PARKCENTER]
gcode:
	CG28                                  																						; home if not already homed
	SAVE_GCODE_STATE NAME=PARKCENTER
	G90                                   																						; absolute positioning
	G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z{printer.toolhead.axis_maximum.z/2} F19500	
	RESTORE_GCODE_STATE NAME=PARKCENTER

[gcode_macro ZUP]
#   My Addition G-Code
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.10 MOVE=1   ; move closer during print to adjust squish
    
[gcode_macro ZDOWN]
#   My Addition G-Code
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.10 MOVE=1

   
[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    #G1 Z80 F100000         
    G1 X250 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E3  F300            # extrude slowly to soften tip of filament
    G1 E-30 F100000        # quickly yank filament back clear of hotend
    G1 E-80 F1800          # ensure filament is clear of extruder gears
    M82                    # set extruder to absolute extrusion

[gcode_macro LOAD_FILAMENT]
gcode:
    M83                    # set extruder to relative extrusion
    G90                    # set toolhead to absolute position
    STATUS_PRINTING
    #G1 Z80 F100000
    G1 X250 Y50 F100000    # move up and to front/center to straighten filament path
    G1 E35 F300            # extrude filament through into hotend
    G1 E15 F240            # slowly extrude through hotend to partially purge previous filament
    G1 E-15.0 F100000      # retract filament
    M82                    # set extruder to absolute extrusion

[gcode_macro CUT_TIP]
gcode: 
  _MMU_CUT_TIP
  M300
  
[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(175)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F12000
    G91
    G1 E1 F300
    G1 E-60 F1000
    RESTORE_GCODE_STATE NAME=M600_state

#[gcode_macro M600]
#gcode:
#    {% set X = params.X|default(50)|float %}
#    {% set Y = params.Y|default(0)|float %}
#    {% set Z = params.Z|default(10)|float %}
#    SAVE_GCODE_STATE NAME=M600_state
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-100 F1000  # vysune filamen
#    PAUSE
#    STATUS_CLEANING
    #prejede k purge bucket
    #G90
    #G1 X75 F10000
    #G1 Y300
    #G1 Z0
    #G1 E100 F1000
    #G1 E-0.8 F2700
#    CLEAN_NOZZLE_PURGE
#    STATUS_PRINTING
#    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro LIGHT_OFF]
gcode:
    SET_LED LED=chamber RED=0 GREEN=0 BLUE=0
    SET_LED LED=sb_leds RED=0 GREEN=0 BLUE=0
    SET_LED LED=btt_mini12864 RED=0 GREEN=0 BLUE=0

[gcode_macro LIGHT_ON]
gcode:
    SET_LED LED=chamber RED=1 GREEN=1 BLUE=1
    SET_LED LED=sb_leds RED=1 GREEN=1 BLUE=1
    SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1

[gcode_macro test_speed_fast]
gcode:
        G28 X0 Y0
        GET_POSITION
        G1 X0 Y0     F27000
        G1 X300 Y300 F27000
        G1 X0 Y0     F27000
        G1 X300 Y300 F27000

        G1 X0 Y300 F36000

        G1 X300 Y0 F27000
        G1 X0 Y300 F27000
        G1 X300 Y0 F27000
        G1 X0 Y300 F27000

        G1 X0 Y0 F36000
        G1 X300 Y0 F36000
        G1 X300 Y300 F36000
        G1 X0 Y300 F36000
        G1 X0 Y0 F36000
        G28 X0 Y0
        GET_POSITION
